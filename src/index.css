@tailwind base;
@tailwind components;
@tailwind utilities;

/* Definition of the design system. All colors, gradients, fonts, etc should be defined here. 
All colors MUST be HSL.
*/

@layer base {
  :root {
    --background: 0 0% 100%;
    --foreground: 222.2 84% 4.9%;

    --card: 0 0% 100%;
    --card-foreground: 222.2 84% 4.9%;

    --popover: 0 0% 100%;
    --popover-foreground: 222.2 84% 4.9%;

    --primary: 222.2 47.4% 11.2%;
    --primary-foreground: 210 40% 98%;

    --secondary: 210 40% 96.1%;
    --secondary-foreground: 222.2 47.4% 11.2%;

    --muted: 210 40% 96.1%;
    --muted-foreground: 215.4 16.3% 46.9%;

    --accent: 210 40% 96.1%;
    --accent-foreground: 222.2 47.4% 11.2%;

    --destructive: 0 84.2% 60.2%;
    --destructive-foreground: 210 40% 98%;

    --border: 214.3 31.8% 91.4%;
    --input: 214.3 31.8% 91.4%;
    --ring: 222.2 84% 4.9%;

    --radius: 0.5rem;

    --sidebar-background: 0 0% 98%;
    --sidebar-foreground: 240 5.3% 26.1%;
    --sidebar-primary: 240 5.9% 10%;
    --sidebar-primary-foreground: 0 0% 98%;
    --sidebar-accent: 240 4.8% 95.9%;
    --sidebar-accent-foreground: 240 5.9% 10%;
    --sidebar-border: 220 13% 91%;
    --sidebar-ring: 217.2 91.2% 59.8%;

    /* Game tokens */
    --tile-correct: 142 71% 45%;
    --tile-correct-foreground: 0 0% 100%;
    --tile-present: 45 93% 47%;
    --tile-present-foreground: 222.2 47.4% 11.2%;
    --tile-absent: 215 20% 85%;
    --tile-absent-foreground: 222.2 47.4% 11.2%;
    --kbd: 210 40% 96.1%;
    --kbd-foreground: 222.2 47.4% 11.2%;

    /* Aesthetic tokens */
    --gradient-primary: linear-gradient(135deg, hsl(var(--primary)), hsl(220 85% 60% / 0.9));
    --shadow-elegant: 0 10px 30px -10px hsl(var(--primary) / 0.15);
    --shadow-glow: 0 0 40px hsl(220 90% 56% / 0.2);
    --transition-smooth: all 0.25s cubic-bezier(0.4, 0, 0.2, 1);
  }

  .dark {
    --background: 222.2 84% 4.9%;
    --foreground: 210 40% 98%;

    --card: 222.2 84% 4.9%;
    --card-foreground: 210 40% 98%;

    --popover: 222.2 84% 4.9%;
    --popover-foreground: 210 40% 98%;

    --primary: 210 40% 98%;
    --primary-foreground: 222.2 47.4% 11.2%;

    --secondary: 217.2 32.6% 17.5%;
    --secondary-foreground: 210 40% 98%;

    --muted: 217.2 32.6% 17.5%;
    --muted-foreground: 215 20.2% 65.1%;

    --accent: 217.2 32.6% 17.5%;
    --accent-foreground: 210 40% 98%;

    --destructive: 0 62.8% 30.6%;
    --destructive-foreground: 210 40% 98%;

    --border: 217.2 32.6% 17.5%;
    --input: 217.2 32.6% 17.5%;
    --ring: 212.7 26.8% 83.9%;
    --sidebar-background: 240 5.9% 10%;
    --sidebar-foreground: 240 4.8% 95.9%;
    --sidebar-primary: 224.3 76.3% 48%;
    --sidebar-primary-foreground: 0 0% 100%;
    --sidebar-accent: 240 3.7% 15.9%;
    --sidebar-accent-foreground: 240 4.8% 95.9%;
    --sidebar-border: 240 3.7% 15.9%;
    --sidebar-ring: 217.2 91.2% 59.8%;

    /* Game tokens - dark */
    --tile-absent: 215 12% 25%;
    --tile-absent-foreground: 210 40% 98%;
    --kbd: 217.2 32.6% 17.5%;
    --kbd-foreground: 210 40% 98%;
    --gradient-primary: linear-gradient(135deg, hsl(225 14% 12%), hsl(220 80% 50% / 0.35));
  }
}

@layer base {
  * {
    @apply border-border;
  }

  body {
    @apply bg-background text-foreground;
  }
}

@layer components {
  .tile {
    @apply w-full aspect-square border rounded-md font-bold uppercase grid place-items-center select-none;
    transition: var(--transition-smooth);
  }
  .tile-empty {
    @apply bg-card text-foreground;
  }
  .tile-correct {
    background-color: hsl(var(--tile-correct));
    color: hsl(var(--tile-correct-foreground));
    border-color: hsl(var(--tile-correct));
  }
  .tile-present {
    background-color: hsl(var(--tile-present));
    color: hsl(var(--tile-present-foreground));
    border-color: hsl(var(--tile-present));
  }
  .tile-absent {
    background-color: hsl(var(--tile-absent));
    color: hsl(var(--tile-absent-foreground));
    border-color: hsl(var(--tile-absent));
  }

  .kbd {
    @apply px-2 py-3 rounded-md text-sm md:text-base font-medium shadow-sm border;
    background-color: hsl(var(--kbd));
    color: hsl(var(--kbd-foreground));
    transition: var(--transition-smooth);
  }
  .kbd:hover { filter: brightness(0.97); }
  .kbd:active { transform: translateY(1px); }
  .kbd-correct { background-color: hsl(var(--tile-correct)); color: hsl(var(--tile-correct-foreground)); border-color: hsl(var(--tile-correct)); }
  .kbd-present { background-color: hsl(var(--tile-present)); color: hsl(var(--tile-present-foreground)); border-color: hsl(var(--tile-present)); }
  .kbd-absent { background-color: hsl(var(--tile-absent)); color: hsl(var(--tile-absent-foreground)); border-color: hsl(var(--tile-absent)); }

  .pointer-glow { position: absolute; inset: 0; pointer-events: none; }
}

@media (prefers-reduced-motion: no-preference) {
  .pointer-glow { background: radial-gradient(600px circle at var(--pointer-x, 50%) var(--pointer-y, 0%), hsl(var(--primary) / 0.10), transparent 45%); }
}

/* Link underline animation */
.story-link { position: relative; display: inline-block; }
.story-link::after { content: ""; position: absolute; left: 0; bottom: -2px; width: 100%; height: 2px; background: hsl(var(--primary)); transform: scaleX(0); transform-origin: bottom right; transition: transform .3s ease; }
.story-link:hover::after { transform: scaleX(1); transform-origin: bottom left; }

/* Keyframes for utility animations used by Tailwind animation utilities */
@keyframes fade-in {
  0% { opacity: 0; transform: translateY(10px); }
  100% { opacity: 1; transform: translateY(0); }
}
@keyframes fade-out {
  0% { opacity: 1; transform: translateY(0); }
  100% { opacity: 0; transform: translateY(10px); }
}
@keyframes scale-in {
  0% { transform: scale(0.95); opacity: 0; }
  100% { transform: scale(1); opacity: 1; }
}
@keyframes scale-out {
  0% { transform: scale(1); opacity: 1; }
  100% { transform: scale(0.95); opacity: 0; }
}